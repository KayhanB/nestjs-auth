type Query {
    listHomes(filter: ModelHomeFilterInput, limit: Int): [Home]
    getHome(id: ID!): Home
    getAVMDetail(getAVMDetailInput: GetAVMDetailInput): AVM
}

type Mutation {
    createHome(createHomeInput: CreateHomeInput): Home
    deleteHome(deleteHomeInput: DeleteHomeInput): Home
    updateHome(updateHomeInput: UpdateHomeInput): Home
}

type Subscription {
    homeCreated: Home
}

type AVM {
    properties: [Property]
    schools: [School]
}

type School {
    id: String
}

type Property {
    address: Address
    area: Area
#    avm: AVM
}

type Area {
    blockNum: String
    countyuse1: String
    countrysecsubd: String
    munname: String
    muncode: String
    subdname: String
    subdtractnum: String
    taxcodearea: String
}

type Address {
    country: String
    countrySubd: String
    line1: String
    line2: String
    locality: String
    matchCode: String
    oneLine: String
    postal1: String
    postal2: String
    postal3: String
}

#type AVM {
#    amount: {
#        scr: String
#        value: String
#        high: String
#        low: String
#        valueRange: String
#    }
#    calculations: {
#        perSizeUnit: String
#        ratioTaxAmt: String
#        ratioTaxValue: String
#        monthlyChgPct: String
#        monthlyChgValue: String
#        rangePctOfValue: String
#    }
#    condition: {
#        avmpoorlow: String
#        avmpoorhigh: String
#        avmpoorscore: String
#        avmgoodlow: String
#        avmgoodhigh: String
#        avmgoodscore: String
#        avmexcellentlow: String
#        avmexcellenthigh: String
#        avmexcellentscore: String
#    }
#    eventDate: String
#    AVMChane: {
#        avmlastmonthvalue: String
#        avmamountchange: String
#        avmpercentchange: String
#    }
#}

type Home {
    id: ID!
    owner: User
    price: Float
    price_adjustment: Float
    descr: String
    json: String
    address_1: String
    address_2: String
    city: String
    state: String
    zip: String
    country: String
    beds: Int
    baths: Int
    lot_size: Float
    sqft: Int
    lat: Float
    lng: Float
    pool: Boolean
    fav_count: Int
    showing_count: Int
    buyers_agent: Boolean
    buyers_agent_amt: Float
    buyers_agent_type: Int
}

input CreateHomeInput {
    owner: String
    price: Float
    price_adjustment: Float
    descr: String
    json: String
    address_1: String
    address_2: String
    city: String
    state: String
    zip: String
    country: String
    beds: Int
    baths: Int
    lot_size: Float
    sqft: Int
    lat: Float
    lng: Float
    pool: Boolean
    fav_count: Int
    showing_count: Int
    buyers_agent: Boolean
    buyers_agent_amt: Float
    buyers_agent_type: Int
}

input UpdateHomeInput {
    id: ID!
    owner: String
    price: Float
    price_adjustment: Float
    descr: String
    json: String
    address_1: String
    address_2: String
    city: String
    state: String
    zip: String
    country: String
    beds: Int
    baths: Int
    lot_size: Float
    sqft: Int
    lat: Float
    lng: Float
    pool: Boolean
    fav_count: Int
    showing_count: Int
    buyers_agent: Boolean
    buyers_agent_amt: Float
    buyers_agent_type: Int
}

input DeleteHomeInput {
    id: ID!
}

input ModelIDFilterInput {
    ne: ID
    eq: ID
    le: ID
    lt: ID
    ge: ID
    gt: ID
    contains: ID
    notContains: ID
    between: [ID]
    beginsWith: ID
}

input ModelBooleanFilterInput {
    ne: Boolean
    eq: Boolean
}

input ModelIntFilterInput {
    ne: Int
    eq: Int
    le: Int
    lt: Int
    ge: Int
    gt: Int
    contains: Int
    notContains: Int
    between: [Int]
}

input ModelFloatFilterInput {
    ne: Float
    eq: Float
    le: Float
    lt: Float
    ge: Float
    gt: Float
    contains: Float
    notContains: Float
    between: [Float]
}

input ModelStringFilterInput {
    ne: String
    eq: String
    le: String
    lt: String
    ge: String
    gt: String
    contains: String
    notContains: String
    between: [String]
    beginsWith: String
}

input ModelHomeFilterInput {
    id: ModelIDFilterInput
    price: ModelFloatFilterInput
    price_adjustment: ModelFloatFilterInput
    descr: ModelStringFilterInput
    json: ModelStringFilterInput
    address_1: ModelStringFilterInput
    address_2: ModelStringFilterInput
    city: ModelStringFilterInput
    state: ModelStringFilterInput
    zip: ModelStringFilterInput
    country: ModelStringFilterInput
    beds: ModelIntFilterInput
    baths: ModelIntFilterInput
    lot_size: ModelFloatFilterInput
    sqft: ModelIntFilterInput
    lat: ModelFloatFilterInput
    lng: ModelFloatFilterInput
    pool: ModelBooleanFilterInput
    fav_count: ModelIntFilterInput
    showing_count: ModelIntFilterInput
    buyers_agent: ModelBooleanFilterInput
    buyers_agent_amt: ModelFloatFilterInput
    buyers_agent_type: ModelIntFilterInput
}

input GetAVMDetailInput {
    address_1: String
    address_2: String
}
